services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: ${DOCKER_MONGO_CONTAINER_NAME:-franchise-mongo}
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-franchise_db_prod}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - franchise-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Spring Boot Application
  franchise-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ${DOCKER_CONTAINER_NAME:-franchise-api}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME:-FranquiciaCore}
      SPRING_WEBFLUX_BASE_PATH: ${SPRING_WEBFLUX_BASE_PATH:-/franquiciacore}
      MONGODB_HOST: ${MONGODB_HOST:-mongo}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      MONGODB_DATABASE: ${MONGODB_DATABASE:-franchise_db_prod}
      MONGODB_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGODB_AUTH_SOURCE: ${MONGODB_AUTH_SOURCE:-admin}
      LOGGING_LEVEL_COM_ACCENTURE_FRANQUICIACORE: ${LOGGING_LEVEL_COM_ACCENTURE_FRANQUICIACORE:-DEBUG}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:-DEBUG}
      JAVA_OPTS: "-Xmx512m -Xms256m"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - franchise-network

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: ${DOCKER_MONGO_EXPRESS_CONTAINER_NAME:-franchise-mongo-express}
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD:-password}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USERNAME:-admin}:${MONGODB_PASSWORD:-password}@${MONGODB_HOST:-mongo}:${MONGODB_PORT:-27017}/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_PASSWORD:-password}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - franchise-network
    profiles:
      - tools

volumes:
  mongo_data:
    driver: local

networks:
  franchise-network:
    driver: bridge

